version: '3.8'

services:
  strategy_manager:
    build: .
    environment:
      - AGENT_TYPE=strategy_manager
      - TRADING_MODE=${TRADING_MODE:-DRY_RUN}
      - INITIAL_BALANCE=${INITIAL_BALANCE:-10000}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DB_PATH=/app/data/trading.db
    volumes:
      - ./src:/app/src
      - ./data:/app/data
      - ./logs:/app/logs
    ports:
      - "8080:8080"
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    restart: unless-stopped

  strategy_optimizer:
    build: .
    environment:
      - AGENT_TYPE=strategy_optimizer
      - TRADING_MODE=${TRADING_MODE:-DRY_RUN}
      - INITIAL_BALANCE=${INITIAL_BALANCE:-10000}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DB_PATH=/app/data/trading.db
    volumes:
      - ./src:/app/src
      - ./data:/app/data
      - ./logs:/app/logs

  code_executor:
    build: .
    environment:
      - AGENT_TYPE=code_executor
      - TRADING_MODE=${TRADING_MODE:-DRY_RUN}
      - INITIAL_BALANCE=${INITIAL_BALANCE:-10000}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DB_PATH=/app/data/trading.db
    volumes:
      - ./src:/app/src
      - ./data:/app/data
      - ./logs:/app/logs

  dashboard:
    build:
      context: .
      dockerfile: Dockerfile.dashboard
    ports:
      - "5000:5000"
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DB_PATH=/app/data/trading.db
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    restart: unless-stopped

volumes:
  data:
  logs: 